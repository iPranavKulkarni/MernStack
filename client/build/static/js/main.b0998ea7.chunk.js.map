{"version":3,"sources":["components/create-student.component.js","components/edit-student.component.js","components/StudentTableRow.js","components/student-list.component.js","App.js","serviceWorker.js","index.js"],"names":["CreateStudent","props","onChangeStudentName","bind","onChangeStudentEmail","onChangeStudentRollno","onSubmit","state","name","email","rollno","e","this","setState","target","value","preventDefault","studentObject","axios","post","then","res","console","log","data","className","Form","Group","controlId","Label","Control","type","onChange","Button","variant","size","block","Component","EditStudent","get","match","params","id","catch","error","put","history","push","StudentTableRow","deleteStudent","delete","obj","_id","path","to","onClick","StudentList","students","map","i","Table","striped","bordered","hover","DataTable","App","Navbar","bg","Container","Brand","Nav","Row","Col","md","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b0998ea7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nexport default class CreateStudent extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // Setting up functions\n    this.onChangeStudentName = this.onChangeStudentName.bind(this);\n    this.onChangeStudentEmail = this.onChangeStudentEmail.bind(this);\n    this.onChangeStudentRollno = this.onChangeStudentRollno.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // Setting up state\n    this.state = {\n      name: '',\n      email: '',\n      rollno: ''\n    }\n  }\n\n  onChangeStudentName(e) {\n    this.setState({ name: e.target.value })\n  }\n\n  onChangeStudentEmail(e) {\n    this.setState({ email: e.target.value })\n  }\n\n  onChangeStudentRollno(e) {\n    this.setState({ rollno: e.target.value })\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n\n    const studentObject = {\n      name: this.state.name,\n      email: this.state.email,\n      rollno: this.state.rollno\n    };\n    axios.post('http://localhost:4000/students/create-student', studentObject)\n      .then(res => console.log(res.data));\n\n    this.setState({ name: '', email: '', rollno: '' })\n  }\n\n  render() {\n    return (<div className=\"form-wrapper\">\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"Name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeStudentName} />\n        </Form.Group>\n\n        <Form.Group controlId=\"Email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" value={this.state.email} onChange={this.onChangeStudentEmail} />\n        </Form.Group>\n\n        <Form.Group controlId=\"Name\">\n          <Form.Label>Roll No</Form.Label>\n          <Form.Control type=\"text\" value={this.state.rollno} onChange={this.onChangeStudentRollno} />\n        </Form.Group>\n\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\" className=\"mt-4\">\n          Create Student\n        </Button>\n      </Form>\n    </div>);\n  }\n}","import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\n\nexport default class EditStudent extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.onChangeStudentName = this.onChangeStudentName.bind(this);\n    this.onChangeStudentEmail = this.onChangeStudentEmail.bind(this);\n    this.onChangeStudentRollno = this.onChangeStudentRollno.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // State\n    this.state = {\n      name: '',\n      email: '',\n      rollno: ''\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/students/edit-student/' + this.props.match.params.id)\n      .then(res => {\n        this.setState({\n          name: res.data.name,\n          email: res.data.email,\n          rollno: res.data.rollno\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onChangeStudentName(e) {\n    this.setState({ name: e.target.value })\n  }\n\n  onChangeStudentEmail(e) {\n    this.setState({ email: e.target.value })\n  }\n\n  onChangeStudentRollno(e) {\n    this.setState({ rollno: e.target.value })\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n\n    const studentObject = {\n      name: this.state.name,\n      email: this.state.email,\n      rollno: this.state.rollno\n    };\n\n    axios.put('http://localhost:4000/students/update-student/' + this.props.match.params.id, studentObject)\n      .then((res) => {\n        console.log(res.data)\n        console.log('Student successfully updated')\n      }).catch((error) => {\n        console.log(error)\n      })\n\n    // Redirect to Student List \n    this.props.history.push('/student-list')\n  }\n\n\n  render() {\n    return (<div className=\"form-wrapper\">\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"Name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeStudentName} />\n        </Form.Group>\n\n        <Form.Group controlId=\"Email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" value={this.state.email} onChange={this.onChangeStudentEmail} />\n        </Form.Group>\n\n        <Form.Group controlId=\"Name\">\n          <Form.Label>Roll No</Form.Label>\n          <Form.Control type=\"text\" value={this.state.rollno} onChange={this.onChangeStudentRollno} />\n        </Form.Group>\n\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\n          Update Student\n        </Button>\n      </Form>\n    </div>);\n  }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Button from 'react-bootstrap/Button'\n\nexport default class StudentTableRow extends Component {\n  constructor(props) {\n    super(props)\n    this.deleteStudent = this.deleteStudent.bind(this)\n  }\n\n  deleteStudent() {\n    axios\n      .delete(\n        'http://localhost:4000/students/delete-student/' + this.props.obj._id,\n      )\n      .then((res) => {\n        console.log('Student successfully deleted!')\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.obj.name}</td>\n        <td>{this.props.obj.email}</td>\n        <td>{this.props.obj.rollno}</td>\n        <td>\n          <Link\n            className=\"edit-link\" path={\"product/:id\"}\n            to={'/edit-student/' + this.props.obj._id}\n          >\n            Edit\n          </Link>\n          <Button onClick={this.deleteStudent} size=\"sm\" variant=\"danger\">\n            Delete\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport StudentTableRow from './StudentTableRow';\n\n\nexport default class StudentList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      students: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/students/')\n      .then(res => {\n        this.setState({\n          students: res.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  DataTable() {\n    return this.state.students.map((res, i) => {\n      return <StudentTableRow obj={res} key={i} />;\n    });\n  }\n\n\n  render() {\n    return (<div className=\"table-wrapper\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Roll No</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.DataTable()}\n        </tbody>\n      </Table>\n    </div>);\n  }\n}","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\nimport CreateStudent from './components/create-student.component'\nimport EditStudent from './components/edit-student.component'\nimport StudentList from './components/student-list.component'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App-header\">\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Container>\n              <Navbar.Brand>\n                <Link to={'/create-student'} className=\"nav-link\">\n                  React MERN Stack App\n                </Link>\n              </Navbar.Brand>\n\n              <Nav className=\"justify-content-end\">\n                <Nav>\n                  <Link to={'/create-student'} className=\"nav-link\">\n                    Create Student\n                  </Link>\n                </Nav>\n\n                <Nav>\n                  <Link to={'/student-list'} className=\"nav-link\">\n                    Student List\n                  </Link>\n                </Nav>\n              </Nav>\n            </Container>\n          </Navbar>\n        </header>\n\n        <Container>\n          <Row>\n            <Col md={12}>\n              <div className=\"wrapper\">\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    component={(props) => <CreateStudent {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/create-student\"\n                    component={(props) => <CreateStudent {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/edit-student/:id\"\n                    component={(props) => <EditStudent {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/student-list\"\n                    component={(props) => <StudentList {...props} />}\n                  />\n                </Switch>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: {\n                'Service-Worker': 'script'\n            },\n        })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}